/*
 * Copyright 2014 Grigory Pykhov
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */



/**
 * Group, version
 */

import groovy.text.SimpleTemplateEngine

description 'S1 XSD utils'
apply plugin:'application'
mainClassName = "org.s1.xsdutils.Main"

dependencies {
    compile libs.xerces
    compile project(':s1-core')
    compile libs.jcommander
    testCompile project(':s1-testing')
}

//expand template (standard way using `expand` is not applicable because of charset)
def expandFile = {path, ctx->
    def file = new File(path);
    def text = file.text
    def engine = new SimpleTemplateEngine()
    template = engine.createTemplate(text).make(ctx);
    file.withWriter('UTF-8'){ it << template.toString() }
}

//clean home
task cleanHome << {
    new File("$buildDir/home").deleteDir();
}

//copy home
task copyApp(type: Copy) {
    from ('app'){
        //exclude('README.*')
    }
    from('../'){
        include('S1-*.txt')
    }
    into 'build/app'
    includeEmptyDirs = true
}
copyApp.dependsOn cleanHome

//process templates
task processTemplates<<{
    expandFile("$buildDir/app/README.txt",[project:project]);
}
processTemplates.dependsOn copyApp

//distribute zip
distZip {
    into(project.name) {
        from 'build/app/'
        include '**/*'
        into "$project.name-$project.version"
    }
}
distZip.dependsOn processTemplates

//add conf to classpath
startScripts {
    classpath += files('REPLACE_WITH_CONF')
    doLast {
        def windowsScriptFile = file getWindowsScript()
        def unixScriptFile    = file getUnixScript()
        windowsScriptFile.text = windowsScriptFile.text.replace('%APP_HOME%\\lib\\REPLACE_WITH_CONF', '%APP_HOME%\\conf')
        unixScriptFile.text  = unixScriptFile.text.replace('$APP_HOME/lib/REPLACE_WITH_CONF', '$APP_HOME/conf')
    }
}